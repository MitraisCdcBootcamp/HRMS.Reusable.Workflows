# This reusable workflow can be called from .NET repository to build, test, and produce artifacts of the project.

name: Build and test PR

on:
  workflow_call:
    inputs:
      repo-name:
        description: "Name of the repository"
        required: true
        type: string
        default: "HRMS.Api"
      operating-systems:
        description: "Optional input to set a list of operating systems which the workflow uses. Defaults to ['self-hosted'] if not set"
        required: false
        type: string
        default: "['self-hosted']"
      project-key:
        description: "SonarQube project key"
        required: true
        type: string
    secrets:
      SONAR_TOKEN:
        description: 'Token for SonarQube'
        required: true

permissions:
  actions: write
  checks: write
  contents: write
  deployments: write
  issues: write
  packages: write
  pull-requests: write
  repository-projects: write
  security-events: write
  statuses: write

jobs:
  build:
    runs-on: ${{matrix.operating-systems}}
    strategy:
      fail-fast: false
      matrix:
        operating-systems: ${{fromJson(inputs.operating-systems)}}
    env:
      DOTNET_INSTALL_DIR: "./.dotnet"
      
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'zulu'
    - name: Cache SonarQube packages
      uses: actions/cache@v1
      with:
        path: ~\sonar\cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Cache SonarQube scanner
      id: cache-sonar-scanner
      uses: actions/cache@v1
      with:
        path: .\.sonar\scanner
        key: ${{ runner.os }}-sonar-scanner
        restore-keys: ${{ runner.os }}-sonar-scanner
    - name: Install SonarQube scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      shell: powershell
      run: |
        New-Item -Path .\.sonar\scanner -ItemType Directory
        dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build and analyze
      shell: powershell
      run: |
        .\.sonar\scanner\dotnet-sonarscanner begin /k:"${{ inputs.project-key }}" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarqube.mitrais-dev.com"
        dotnet build
        .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
    - name: Test
      run: dotnet test --no-build --verbosity normal
