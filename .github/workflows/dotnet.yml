# This reusable workflow can be called from .NET repository to build, test, and produce artifacts of the project.

name: Build and test PR

on:
  workflow_call:
    inputs:
      repo-name:
        description: "Name of the repository"
        required: true
        type: string
        default: "HRMS.Api"
      operating-systems:
        description: "Optional input to set a list of operating systems which the workflow uses. Defaults to ['self-hosted'] if not set"
        required: false
        type: string
        default: "['self-hosted']"

permissions:
  contents: read
  pages: write

jobs:
  build:
    runs-on: ${{matrix.operating-systems}}
    strategy:
      fail-fast: false
      matrix:
        operating-systems: ${{fromJson(inputs.operating-systems)}}
    env:
      DOTNET_INSTALL_DIR: "./.dotnet"

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
    # - name: Upload a Build Artifact
    #   uses: actions/upload-artifact@v3.1.3
    #   with:
    #     path: C:\Users\Public\actions-runner\_work\${{inputs.repo-name}}\${{inputs.repo-name}}\artifacts
    # - name: Download a Build Artifact
    #   uses: actions/download-artifact@v2.1.1
    #   with:
    #     path: C:\Users\Public\Artifacts
    - name: Publish
      run: dotnet publish --output ./publish
    - name: Deploy to IIS
      run: |
        Write-Information "Changing GHA service ownership to Administrator..."
        [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
        Install-PackageProvider -Name NuGet -Force
        Install-Module -Name 'Carbon' -AllowClobber -Force
        Stop-Service "actions.runner.*"
        Grant-CPrivilege -Identity "Administrator" "SeServiceLogonRight"
        net user Administrator "$GH_KEY"
        Write-Information "starting GHA service..."
        Set-Service -Name $ServiceName -StartupType Automatic
        Start-Service "actions.runner.*"
        Invoke-Expression "cmd.exe /c sc config $ServiceName obj= '$(hostname)\Administrator' password= '$GH_KEY' type= own"
        iisreset /stop
        Copy-Item ./publish/* C:\CDC Team 4\API\${{inputs.repo-name}} -Recurse -Force
        iisreset /start